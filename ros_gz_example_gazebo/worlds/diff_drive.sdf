<?xml version="1.0" ?>
<!--
  Try sending commands:
    gz topic -t "/model/diff_drive/cmd_vel" -m gz.msgs.Twist -p "linear: {x: 1.0}, angular: {z: -0.1}"
    ros2 topic pub /diff_drive/cmd_vel geometry_msgs/msg/Twist "{linear: {x: 5.0, y: 0.0, z: 0.0}, angular: {x: 0.0, y: 0.0, z: -0.1}}"
  Listen to odometry:
    gz topic -e -t /model/diff_drive/odometry
    ros2 topic echo /model/diff_drive/odometry
-->
<model name="diff_drive">
  <self_collide>true</self_collide>
  <pose>0 0 0.35 0 0 0</pose>
  <include merge="true">
    <uri>package://ros_gz_example_description/models/diff_drive</uri>
  </include>

  <!-- Camera attachment -->
  <link name="camera_link">
    <pose relative_to="chassis">0 0 0.5 0 0 0</pose> <!-- Adjust pose as needed -->
    <sensor name="camera" type="camera">
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <topic>camera</topic>
    </sensor>
  </link>

  <plugin
    filename="gz-sim-joint-state-publisher-system"
    name="gz::sim::systems::JointStatePublisher">
  </plugin>

  <plugin
    filename="gz-sim-pose-publisher-system"
    name="gz::sim::systems::PosePublisher">
    <publish_link_pose>true</publish_link_pose>
    <use_pose_vector_msg>true</use_pose_vector_msg>
    <static_publisher>true</static_publisher>
    <static_update_frequency>1</static_update_frequency>
  </plugin>

  <plugin
    filename="gz-sim-odometry-publisher-system"
    name="gz::sim::systems::OdometryPublisher">
    <odom_frame>diff_drive/odom</odom_frame>
    <robot_base_frame>diff_drive</robot_base_frame>
  </plugin>
</model>
